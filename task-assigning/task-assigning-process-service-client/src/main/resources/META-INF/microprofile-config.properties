quarkus.oidc.enabled=true
quarkus.oidc.tenant-enabled=false
%keycloak.quarkus.oidc.tenant-enabled=true
%keycloak.quarkus.oidc.auth-server-url=http://localhost:8280/auth/realms/kogito
%keycloak.quarkus.oidc.client-id=kogito-task-assigning-service
%keycloak.quarkus.oidc.application-type=service
%keycloak.quarkus.oidc.credentials.secret=secret


mp.messaging.incoming.kogito-usertaskinstances-events.connector=smallrye-kafka
mp.messaging.incoming.kogito-usertaskinstances-events.topic=kogito-usertaskinstances-events
mp.messaging.incoming.kogito-usertaskinstances-events.value.deserializer=org.kie.kogito.taskassigning.messaging.UserTaskEventDeserializer
mp.messaging.incoming.kogito-usertaskinstances-events.client.id=kogito-task-assigning-service
mp.messaging.incoming.kogito-usertaskinstances-events.group.id=kogito-task-assigning-service
mp.messaging.incoming.kogito-usertaskinstances-events.enable.auto.commit=false
mp.messaging.incoming.kogito-usertaskinstances-events.auto.offset.reset=earliest
mp.messaging.incoming.kogito-usertaskinstances-events.isolation.level=read_committed

#this configuration property works fine, it's being picked up well by the Smallrye KafkaConnector
#mp.messaging.incoming.kogito-usertaskinstances-events.throttled.unprocessed-record-max-age.ms=0


#mp.messaging.incoming.kogito-usertaskinstances-events.consumer-rebalance-listener.name=ExampleConsumerRebalanceListener

# configures the kafka max.poll.interval.ms for the kogito.usertaskinstances-events connector.
#mp.messaging.incoming.kogito-usertaskinstances-events.max.poll.interval.ms=5000
